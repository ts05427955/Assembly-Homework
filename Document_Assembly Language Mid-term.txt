Assembly Language Midterm Report Academic Year: 107,
 Semester 1 Instructor: Professor Zhu Shouli 
Students: 10627173 Ma Chun Yuen 


I. 
Background 


The primary purpose of this midterm report is to practice using assembly language, including the basic structure, various instructions (such as bl scanf, bl print, ldr r1, [r1], etc.), understanding function calls (using bl (function name) in main), loops (b (condition) target), and how to use and allocate registers to store data. These skills are essential to fulfill the requirements of the assigned tasks.


 II. Method Name: Set the names of each team member. When the function is called, output each team member's name (using instructions like ldr r0, (variable name) and print), repeat the process until all team member names are printed. After printing, store the team member data in r4, r5, r6 (using ldr r0, data and mov r0, target register). ID: Read three student IDs and store them in r7, r8, r9. Perform the summation operation and store the result in r10. Then, input an instruction character and check if the input is 'p' (read the character into r1 and use cmp to compare if it is 'p'). If it is 'p', output all the data, including the team code, input student IDs, and the sum. If the input is not 'p', prompt for input again until the correct instruction is entered. Main: Declare the required strings and store them in r0 when needed, then output them. Call the two functions mentioned above (using bl function name) within the main function. Combine the data from the functions and print the result (each team member's name with corresponding student ID and the sum of student IDs). Please note that the above description outlines the methodology and structure of the assembly language program developed for the midterm report.


























Main :
  

  

  



First, define labels for the items to be printed later. Backup the state of lr. Call the target function to fulfill its requirements. Return to the main function after completing the function's tasks. Restore the lr state to its state before executing the program. Copy lr into pc.
















Name :
  

  



Load each group member's name separately and then print them. After printing, store the data in the specified registers r4, r5, r6.






























ID :


  

  

  

  

  

  





























Three, Results


  

  
  
  
  





  



Four, Discussion 


In this assignment, we discussed the utilization of registers, the use of 'bl' (branch with the link) instruction, the methodology of using registers, memory allocation, and function calls. We emphasized the importance of understanding the desired instructions and usage before writing the program. 


Five, Conclusion For those of us who have only learned C or higher-level languages, assembly language can be an inconvenient tool. It requires a significant amount of assembly language code to accomplish what can be achieved with a simple C instruction. However, once we become familiar with it, we find it to be a powerful tool. The programming approach is intuitive, and we can simply translate our thoughts into executable code. It eliminates some mysterious bugs that may occur in languages like C++ or Java, such as unexpected behavior when inputting values or results not meeting expectations. Assembly language is also helpful in debugging, as it allows us to pinpoint the exact location of problems. 


Six, Future Outlook In the future, we hope to advance further in the field of assembly language and acquire more knowledge in this area. While high-level languages are more commonly used in everyday programming, assembly language becomes valuable when troubleshooting or addressing issues in high-level languages. Additionally, assembly language is closer to the hardware itself, enabling us to directly handle hardware-related problems. We aspire to learn more advanced techniques and gain a deeper understanding of assembly language, facilitating better communication between humans and machines.